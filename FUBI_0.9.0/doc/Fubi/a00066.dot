digraph "FubiUser"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  Node1 [label="{FubiUser\n|+ m_inScene\l+ m_id\l+ m_isTracked\l- m_combinationRecognizers\l- m_userDefinedCombination\lRecognizers\l- m_lastRightFingerDetection\l- m_lastLeftFingerDetection\l- m_useConvexityDefectMethod\l- m_maxFingerCountForMedian\l- m_rightFingerCount\l- m_leftFingerCount\l- m_fingerTrackIntervall\l- m_lastBodyMeasurementUpdate\l|+ FubiUser()\l+ ~FubiUser()\l+ enableCombinationRecognition()\l+ enableCombinationRecognition()\l+ enableFingerTracking()\l+ getFingerCount()\l+ clearUserDefinedCombination\lRecognizers()\l+ update()\l+ updateTrackingData()\l+ reset()\land 6 more...\l+ closerToSensor()\l+ moreLeft()\l- addFingerCount()\l- calculateFilteredTransformations()\l- updateCombinationRecognizers()\l- updateFingerCount()\l- calculateMedianFingerCount()\l- updateBodyMeasurements()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_lastFilteredVelocity" ,arrowhead="odiamond",fontname="FreeSans"];
  Node2 [label="{Fubi::Vec3f\n|+ x\l+ y\l+ z\l|+ Vec3f()\l+ Vec3f()\l+ Vec3f()\l+ Vec3f()\l+ operator[]()\l+ operator==()\l+ operator!=()\l+ operator-()\l+ operator+()\l+ operator+=()\land 17 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00036.html",tooltip="Vector class with three components. "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_filteredTrackingData\n+m_lastTrackingData\n+m_currentTrackingData\n+m_lastFilteredTrackingData" ,arrowhead="odiamond",fontname="FreeSans"];
  Node3 [label="{FubiUser::TrackingData\n|+ timeStamp\l|+ TrackingData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00035.html",tooltip="Tracking data with global and local positions/orientations and a timestamp. "];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +jointPositions\n+localJointPositions" ,arrowhead="odiamond",fontname="FreeSans"];
  Node4 [label="{Fubi::SkeletonJointPosition\n|+ m_confidence\l|+ SkeletonJointPosition()\l+ SkeletonJointPosition()\l+ SkeletonJointPosition()\l+ SkeletonJointPosition()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00032.html",tooltip="SkeletonJointPosition contains the position (Vec3f) and tracking confidence for a skeleton joint..."];
  Node2 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +m_position" ,arrowhead="odiamond",fontname="FreeSans"];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" +localJointOrientations\n+jointOrientations" ,arrowhead="odiamond",fontname="FreeSans"];
  Node5 [label="{Fubi::SkeletonJointOrientation\n|+ m_confidence\l|+ SkeletonJointOrientation()\l+ SkeletonJointOrientation()\l+ SkeletonJointOrientation()\l+ SkeletonJointOrientation()\l+ SkeletonJointOrientation()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00031.html",tooltip="SkeletonJointOrientation contains the orientation (Matrix3f) and tracking confidence for a skeleton j..."];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" +m_orientation" ,arrowhead="odiamond",fontname="FreeSans"];
  Node6 [label="{Fubi::Matrix3f\n|+ c\l+ x\l+ @1\l|+ Matrix3f()\l+ Matrix3f()\l+ Matrix3f()\l+ Matrix3f()\l+ operator+()\l+ operator+=()\l+ operator*()\l+ operator*()\l+ operator*()\l+ rotate()\land 6 more...\l+ RotMat()\l+ RotMat()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00017.html",tooltip="Matrix class with 3x3 layout (rotation matrices) "];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_bodyMeasurements" ,arrowhead="odiamond",fontname="FreeSans"];
  Node7 [label="{Fubi::BodyMeasurementDistance\n|+ m_dist\l+ m_confidence\l|+ BodyMeasurementDistance()\l+ BodyMeasurementDistance()\l+ BodyMeasurementDistance()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00003.html",tooltip="BodyMeasurementDistance contains the distance and tracking confidence for a body measurement. "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_rightFingerCountImage\n-m_leftFingerCountImage" ,arrowhead="odiamond",fontname="FreeSans"];
  Node8 [label="{Fubi::FingerCountImageData\n|+ image\l+ timeStamp\l+ fingerCount\l+ posX\l+ posY\l|+ FingerCountImageData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00007.html",tooltip="Processed part of the depth stream with tracking data by Fubi&#39;s build in finger tracking. "];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +m_accelerationData" ,arrowhead="odiamond",fontname="FreeSans"];
  Node9 [label="{FubiUser::AccelerationData\n|+ timeStamp\l|+ AccelerationData()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00001.html",tooltip="Acceleration data and a timestamp. "];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +accelerations" ,arrowhead="odiamond",fontname="FreeSans"];
  Node10 [label="{Fubi::SkeletonJointAcceleration\n|+ m_confidence\l|+ SkeletonJointAcceleration()\l+ SkeletonJointAcceleration()\l+ SkeletonJointAcceleration()\l+ SkeletonJointAcceleration()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$a00030.html",tooltip="SkeletonJointAcceleration contains the acceleration and tracking confidence for a skeleton joint..."];
  Node2 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +m_acceleration" ,arrowhead="odiamond",fontname="FreeSans"];
}
